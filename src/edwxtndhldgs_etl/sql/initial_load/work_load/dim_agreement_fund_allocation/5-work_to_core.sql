INSERT INTO edw_tdsunset.dim_agreement_fund_allocation_initial_aifrps
(
DIM_AGREEMENT_FUND_ALLOCATION_NATURAL_KEY_HASH_UUID,
DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
DIM_FUND_NATURAL_KEY_HASH_UUID,
AGREEMENT_SOURCE_CDE,
AGREEMENT_TYPE_CDE,
AGREEMENT_NR_PFX,
AGREEMENT_NR,
AGREEMENT_NR_SFX,
ADMIN_FUND_CDE,
PRODUCT_ID,
COMPANY_CDE,
PT1_KIND_CDE,
PRODUCT_TIER_CDE,
FUND_ALLOCATION_COUNTER_NR,
ALLOCATION_PCT,
FUND_MODEL_ID,
BUSINESS_START_DT,
BUSINESS_END_DT,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
CHECK_SUM,
END_DT,
END_DTM,
RESTRICTED_ROW_IND,
CURRENT_ROW_IND,
LOGICAL_DELETE_IND,
SOURCE_SYSTEM_ID,
AUDIT_ID,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND
)
SELECT 	
UUID_GEN(
CLEAN_STRING(AGREEMENT_SOURCE_CDE),
CLEAN_STRING(AGREEMENT_TYPE_CDE),
CLEAN_STRING(AGREEMENT_NR_PFX),
CLEAN_STRING(AGREEMENT_NR),
CLEAN_STRING(AGREEMENT_NR_SFX),
CLEAN_STRING(ADMIN_FUND_CDE),
CLEAN_STRING(PRODUCT_ID),
CLEAN_STRING(COMPANY_CDE),
CLEAN_STRING(PT1_KIND_CDE),
CLEAN_STRING(PRODUCT_TIER_CDE))::UUID AS DIM_AGREEMENT_FUND_ALLOCATION_NATURAL_KEY_HASH_UUID,

UUID_GEN(
CLEAN_STRING(AGREEMENT_SOURCE_CDE),
CLEAN_STRING(AGREEMENT_TYPE_CDE),
CLEAN_STRING(AGREEMENT_NR_PFX),
CLEAN_STRING(AGREEMENT_NR),
CLEAN_STRING(AGREEMENT_NR_SFX))::UUID AS DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,

UUID_GEN(NULL)::UUID AS DIM_FUND_NATURAL_KEY_HASH_UUID,

AGREEMENT_SOURCE_CDE,
AGREEMENT_TYPE_CDE,
AGREEMENT_NR_PFX,
AGREEMENT_NR,
AGREEMENT_NR_SFX,
ADMIN_FUND_CDE,
PRODUCT_ID,
COMPANY_CDE,
PT1_KIND_CDE,
PRODUCT_TIER_CDE,
FUND_ALLOCATION_COUNTER_NR,
ALLOCATION_PCT,
FUND_MODEL_ID,
BUSINESS_START_DT,
BUSINESS_END_DT,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
UUID_GEN(
SOURCE_DELETE_IND,
FUND_ALLOCATION_COUNTER_NR,
ALLOCATION_PCT,
FUND_MODEL_ID
--BUSINESS_START_DT,--need to check whether to include this column or not
--BUSINESS_END_DT--need to check whether to include this column or not
)::UUID AS CHECK_SUM,
END_DT,
END_DTM,
RESTRICTED_ROW_IND,
CURRENT_ROW_IND,
LOGICAL_DELETE_IND,
SOURCE_SYSTEM_ID,
AUDIT_ID,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND
FROM (
SELECT DISTINCT 
'Ipa' as AGREEMENT_TYPE_CDE,
CLEAN_STRING(AFA.CARR_ADMIN_SYS_CD) AS AGREEMENT_SOURCE_CDE,
CLEAN_STRING(AFA.HLDG_KEY_PFX) AS AGREEMENT_NR_PFX,
LPAD(AFA.HLDG_KEY::VARCHAR, 20, '0') AS AGREEMENT_NR,
CLEAN_STRING(AFA.HLDG_KEY_SFX) AS AGREEMENT_NR_SFX,
AFA.ADMIN_FND_NR as ADMIN_FUND_CDE,
NULL AS PRODUCT_ID,
NULL AS COMPANY_CDE,
NULL AS PT1_KIND_CDE,
AFA.PROD_TIER_CD AS PRODUCT_TIER_CDE,
AFA.FND_ALLOC_CNTR AS FUND_ALLOCATION_COUNTER_NR,
AFA.ALLOC_PCT::numeric(5,1) AS ALLOCATION_PCT,
CLEAN_STRING(AFA.FND_MODEL_ID) AS FUND_MODEL_ID,
CASE WHEN AFA.SRC_DEL_IND='Y' THEN AFA.TRANS_DT::DATE ELSE AFA.BUSS_STRT_DT END AS BUSINESS_START_DT,--AFA.BUSS_STRT_DT AS BUSINESS_START_DT,
AFA.AGMT_FND_ALLOC_TO_DT::DATE AS BUSINESS_END_DT,
AFA.TRANS_DT::DATE AS BEGIN_DT,
AFA.TRANS_DT::TIMESTAMP AS BEGIN_DTM,
CURRENT_TIMESTAMP(6) AS ROW_PROCESS_DTM,
AFA.AGMT_FND_ALLOC_TO_DT::DATE as END_DT,
AFA.AGMT_FND_ALLOC_TO_DT::TIMESTAMP AS END_DTM,
FALSE AS RESTRICTED_ROW_IND,
CASE WHEN AFA.CURR_IND='Y' THEN TRUE
	WHEN AFA.CURR_IND='N' THEN FALSE 
	ELSE FALSE
END AS CURRENT_ROW_IND,
FALSE AS LOGICAL_DELETE_IND,
266 AS SOURCE_SYSTEM_ID,
AFA.RUN_ID AS AUDIT_ID,
AFA.UPDT_RUN_ID AS UPDATE_AUDIT_ID,
CASE WHEN AFA.SRC_DEL_IND='Y' THEN TRUE
	WHEN AFA.SRC_DEL_IND='N' THEN FALSE 
	ELSE FALSE
END AS SOURCE_DELETE_IND
FROM PROD_STND_VW_TERSUN.AGMT_FND_ALLOC_VW_AIF_RPS AFA
WHERE AFA.SRC_SYS_ID = 72
) DAFA ;


