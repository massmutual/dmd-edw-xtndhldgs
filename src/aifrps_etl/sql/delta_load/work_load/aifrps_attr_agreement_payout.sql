/*
		FILENAME: AIFRPS_ATTR_AGREEMENT_PAYOUT.SQL
		AUTHOR: SHASHIKANTH VANGA 
		SUBJECT AREA : AGREEMENT
		SOURCE: AIF-RPS
		TERADATA SOURCE CODE:
		DESCRIPTION: ATTR_AGREEMENT_PAYOUT TABLE 
		JIRA:
		CREATE DATE:2021-05-07
		===============================================================================================================
		VERSION/JIRA STORY#			CREATED BY          LAST_MODIFIED_DATE		DESCRIPTION
		---------------------------------------------------------------------------------------------------------------
									AGREEMENT TIER-2              			FIRST VERSION OF DDL FOR TIER-2				
		---------------------------------------------------------------------------------------------------------------
*/

/* TRUNCATE STAGING PRE WORK TABLE */
TRUNCATE TABLE EDW_STAGING.AIFRPS_ATTR_AGREEMENT_PAYOUT_PRE_WORK;

/*TRUNCATE WORK TABLE */
TRUNCATE TABLE EDW_WORK.AIFRPS_ATTR_AGREEMENT_PAYOUT;

/*INSERT SCRIPT FOR PRE WORK TABLE -ALL RECORDS FROM STG*/
INSERT INTO  EDW_STAGING.AIFRPS_ATTR_AGREEMENT_PAYOUT_PRE_WORK
(
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    DIM_ANNUITY_PAYOUT_OPTION_NATURAL_KEY_HASH_UUID,
    AGREEMENT_SOURCE_CDE,
    AGREEMENT_TYPE_CDE,
    AGREEMENT_NR_PFX,
    AGREEMENT_NR,
    AGREEMENT_NR_SFX,
    PAYOUT_METHOD_CDE,
    SOURCE_PAYOUT_METHOD_CDE,
    PAYOUT_MODE_CDE,
    SOURCE_PAYOUT_MODE_CDE,
    PAYOUT_STATUS_CDE,
    SOURCE_PAYOUT_STATUS_CDE,
    FIRST_PAYOUT_DT,
    LAST_PAYOUT_DT,
    NEXT_PAYOUT_DT,
    PAYOUT_OPTION_CDE,
    PAYMENT_ACCELERATION_ELIGIBILITY_CDE,
    PAYMENT_ACCELERATION_CNT,
    PERIOD_CERTAIN_PAYOUT_MODE_DURATION_NR,
    LAST_GUARANTEED_PAYOUT_DT,
    CURRENT_PAYOUT_AMT,
    REMAINING_INSTALLMENT_AMT,
    FIXED_PURCHASE_PAYOUT_AMT,
    VARIABLE_PURCHASE_PAYOUT_AMT,
    TOTAL_PURCHASE_PAYMENT_AMT,
    TOTAL_INITIAL_PURCHASE_PAYMENT_AMT,
    TOTAL_GROSS_PAYOUT_AMT,
    YTD_GROSS_PAYOUT_AMT,
    TOTAL_NET_PAYOUT_AMT,
    YTD_NET_PAYOUT_AMT,
    PRIMARY_AND_JOINT_PAYOUT_AMT,
    PRIMARY_ONLY_PAYOUT_AMT,
    JOINT_ONLY_PAYOUT_AMT,
    BEGIN_DT,
    BEGIN_DTM,
    ROW_PROCESS_DTM,
    CHECK_SUM,
    END_DT,
    END_DTM,
    RESTRICTED_ROW_IND,
    CURRENT_ROW_IND,
    LOGICAL_DELETE_IND,
    SOURCE_SYSTEM_ID,
    AUDIT_ID,
    UPDATE_AUDIT_ID,
    SOURCE_DELETE_IND )
SELECT
DISTINCT
    AAP.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    AAP.DIM_ANNUITY_PAYOUT_OPTION_NATURAL_KEY_HASH_UUID,
    AAP.AGREEMENT_SOURCE_CDE,
    AAP.AGREEMENT_TYPE_CDE,
    AAP.AGREEMENT_NR_PFX,
    AAP.AGREEMENT_NR,
    AAP.AGREEMENT_NR_SFX,
    AAP.PAYOUT_METHOD_CDE,
    AAP.SOURCE_PAYOUT_METHOD_CDE,
    AAP.PAYOUT_MODE_CDE,
    AAP.SOURCE_PAYOUT_MODE_CDE,
    AAP.PAYOUT_STATUS_CDE,
    AAP.SOURCE_PAYOUT_STATUS_CDE,
    AAP.FIRST_PAYOUT_DT,
    AAP.LAST_PAYOUT_DT,
    AAP.NEXT_PAYOUT_DT,
    AAP.PAYOUT_OPTION_CDE,
    AAP.PAYMENT_ACCELERATION_ELIGIBILITY_CDE,
    AAP.PAYMENT_ACCELERATION_CNT,
    CASE WHEN UPPER(AAP.PAYOUT_MODE_CDE)='M'       THEN DAPO.PERIOD_CERTAIN_MONTH_NR
         WHEN UPPER(AAP.PAYOUT_MODE_CDE)='Q'       THEN DAPO.PERIOD_CERTAIN_MONTH_NR/3
         WHEN UPPER(AAP.PAYOUT_MODE_CDE)='A'       THEN DAPO.PERIOD_CERTAIN_MONTH_NR/12
         WHEN UPPER(AAP.PAYOUT_MODE_CDE)='SA'      THEN DAPO.PERIOD_CERTAIN_MONTH_NR/6
         WHEN UPPER(AAP.PAYOUT_MODE_CDE)='UNK'  THEN 0 END AS PERIOD_CERTAIN_PAYOUT_MODE_DURATION_NR,
    AAP.LAST_GUARANTEED_PAYOUT_DT,
    AAP.CURRENT_PAYOUT_AMT,
    AAP.REMAINING_INSTALLMENT_AMT,
    AAP.FIXED_PURCHASE_PAYOUT_AMT,
    AAP.VARIABLE_PURCHASE_PAYOUT_AMT,
    AAP.TOTAL_PURCHASE_PAYMENT_AMT,
    AAP.TOTAL_INITIAL_PURCHASE_PAYMENT_AMT,
    COALESCE(SUM(AAP.AIFRPA_TOT_GROSS_PAYOUT_AMT) OVER (PARTITION BY DIM_AGREEMENT_NATURAL_KEY_HASH_UUID)::NUMERIC(17,4),0) AS TOTAL_GROSS_PAYOUT_AMT,
    COALESCE(SUM(AAP.AIFRPA_YTD_GROSS_PAYOUT_AMT) OVER (PARTITION BY DIM_AGREEMENT_NATURAL_KEY_HASH_UUID)::NUMERIC(17,4),0) AS YTD_GROSS_PAYOUT_AMT,
    COALESCE(SUM(AAP.AIFRPA_TOT_NET_PAYOUT_AMT) OVER (PARTITION BY DIM_AGREEMENT_NATURAL_KEY_HASH_UUID)::NUMERIC(17,4),0) AS TOTAL_NET_PAYOUT_AMT,
    COALESCE(SUM(AAP.AIFRPA_YTD_NET_PAYOUT_AMT) OVER (PARTITION BY DIM_AGREEMENT_NATURAL_KEY_HASH_UUID)::NUMERIC(17,4),0) AS YTD_NET_PAYOUT_AMT,
    AAP.PRIMARY_AND_JOINT_PAYOUT_AMT,
    AAP.PRIMARY_ONLY_PAYOUT_AMT,
    AAP.JOINT_ONLY_PAYOUT_AMT,
    AAP.BEGIN_DT,
    AAP.BEGIN_DTM,
    AAP.ROW_PROCESS_DTM,
    UUID_GEN (
    AAP.SOURCE_DELETE_IND,
    CLEAN_STRING(AAP.PAYOUT_METHOD_CDE),
    CLEAN_STRING(AAP.SOURCE_PAYOUT_METHOD_CDE),
    CLEAN_STRING(AAP.PAYOUT_MODE_CDE),
    CLEAN_STRING(AAP.SOURCE_PAYOUT_MODE_CDE),
    CLEAN_STRING(AAP.PAYOUT_STATUS_CDE),
    CLEAN_STRING(AAP.SOURCE_PAYOUT_STATUS_CDE),
    AAP.FIRST_PAYOUT_DT,
    AAP.LAST_PAYOUT_DT,
    AAP.NEXT_PAYOUT_DT,
    CLEAN_STRING(AAP.PAYOUT_OPTION_CDE),
    CLEAN_STRING(AAP.PAYMENT_ACCELERATION_ELIGIBILITY_CDE),
    AAP.PAYMENT_ACCELERATION_CNT,
    CASE WHEN UPPER(AAP.PAYOUT_MODE_CDE)='M'       THEN DAPO.PERIOD_CERTAIN_MONTH_NR
         WHEN UPPER(AAP.PAYOUT_MODE_CDE)='Q'       THEN DAPO.PERIOD_CERTAIN_MONTH_NR/3
         WHEN UPPER(AAP.PAYOUT_MODE_CDE)='A'       THEN DAPO.PERIOD_CERTAIN_MONTH_NR/12
         WHEN UPPER(AAP.PAYOUT_MODE_CDE)='SA'      THEN DAPO.PERIOD_CERTAIN_MONTH_NR/6
         WHEN UPPER(AAP.PAYOUT_MODE_CDE)='UNK'  THEN 0 END ,-- AS PERIOD_CERTAIN_PAYOUT_MODE_DURATION_NR,
    AAP.LAST_GUARANTEED_PAYOUT_DT,
    AAP.CURRENT_PAYOUT_AMT,
    AAP.REMAINING_INSTALLMENT_AMT,
    AAP.FIXED_PURCHASE_PAYOUT_AMT,
    AAP.VARIABLE_PURCHASE_PAYOUT_AMT,
    AAP.TOTAL_PURCHASE_PAYMENT_AMT,
    AAP.TOTAL_INITIAL_PURCHASE_PAYMENT_AMT,
    COALESCE(SUM(AAP.AIFRPA_TOT_GROSS_PAYOUT_AMT) OVER (PARTITION BY DIM_AGREEMENT_NATURAL_KEY_HASH_UUID)::NUMERIC(17,4),0), --AS TOTAL_GROSS_PAYOUT_AMT,
    COALESCE(SUM(AAP.AIFRPA_YTD_GROSS_PAYOUT_AMT) OVER (PARTITION BY DIM_AGREEMENT_NATURAL_KEY_HASH_UUID)::NUMERIC(17,4),0), --AS YTD_GROSS_PAYOUT_AMT,
    COALESCE(SUM(AAP.AIFRPA_TOT_NET_PAYOUT_AMT) OVER (PARTITION BY DIM_AGREEMENT_NATURAL_KEY_HASH_UUID)::NUMERIC(17,4),0), --AS TOTAL_NET_PAYOUT_AMT,
    COALESCE(SUM(AAP.AIFRPA_YTD_NET_PAYOUT_AMT) OVER (PARTITION BY DIM_AGREEMENT_NATURAL_KEY_HASH_UUID)::NUMERIC(17,4),0), --AS YTD_NET_PAYOUT_AMT,
    AAP.PRIMARY_AND_JOINT_PAYOUT_AMT,
    AAP.PRIMARY_ONLY_PAYOUT_AMT,
    AAP.JOINT_ONLY_PAYOUT_AMT )::UUID AS CHECK_SUM,
    AAP.END_DT,
    AAP.END_DTM,
    AAP.RESTRICTED_ROW_IND,
    AAP.CURRENT_ROW_IND,
    AAP.LOGICAL_DELETE_IND,
    AAP.SOURCE_SYSTEM_ID,
    AAP.AUDIT_ID,
    AAP.UPDATE_AUDIT_ID,
    AAP.SOURCE_DELETE_IND
FROM
(
SELECT
    UUID_GEN(
          CLEAN_STRING(AGRMT_SDT.TRNSLT_FLD_VAL),
          CLEAN_STRING('Ipa'),
          CLEAN_STRING(PUBLIC.UDF_AIF_HLDG_KEY_FORMAT(CONTRACTFULL.AIFCOW_POLICY_ID,'PFX')),
          CLEAN_STRING(PUBLIC.UDF_AIF_HLDG_KEY_FORMAT(CONTRACTFULL.AIFCOW_POLICY_ID,'KEY')),
          CLEAN_STRING(PUBLIC.UDF_AIF_HLDG_KEY_FORMAT(CONTRACTFULL.AIFCOW_POLICY_ID,'SFX'))
           )  ::UUID AS DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    UUID_GEN(
     CLEAN_STRING(CONTRACTFULL.AIFCOW_BEN_DESC_ANNTY_OPT_CODE)
                 )  ::UUID AS DIM_ANNUITY_PAYOUT_OPTION_NATURAL_KEY_HASH_UUID,
     AGRMT_SDT.TRNSLT_FLD_VAL AS AGREEMENT_SOURCE_CDE,
     'Ipa' AS AGREEMENT_TYPE_CDE ,
     CLEAN_STRING(PUBLIC.UDF_AIF_HLDG_KEY_FORMAT(CONTRACTFULL.AIFCOW_POLICY_ID,'PFX')) AS AGREEMENT_NR_PFX,
     CLEAN_STRING(PUBLIC.UDF_AIF_HLDG_KEY_FORMAT(CONTRACTFULL.AIFCOW_POLICY_ID,'KEY')) AS AGREEMENT_NR,
     CLEAN_STRING(PUBLIC.UDF_AIF_HLDG_KEY_FORMAT(CONTRACTFULL.AIFCOW_POLICY_ID,'SFX')) AS AGREEMENT_NR_SFX,
     NULL AS PAYOUT_METHOD_CDE,
     NULL AS SOURCE_PAYOUT_METHOD_CDE,
     COALESCE(CLEAN_STRING(SDT_PAYOUT_MODE_CDE.TRNSLT_FLD_VAL), 'UNK') AS PAYOUT_MODE_CDE,
     CONTRACTFULL.AIFCOW_PAYOUT_FREQ_CODE AS SOURCE_PAYOUT_MODE_CDE,
     COALESCE(CLEAN_STRING(SDT_PAYOUT_STATUS_CDE.TRNSLT_FLD_VAL), 'UNK') AS PAYOUT_STATUS_CDE,
     CONTRACTFULL.AIFCOW_PAYOUT_STAT_CODE AS SOURCE_PAYOUT_STATUS_CDE,
     CASE WHEN
         TO_CHAR(CONTRACTFULL.AIFCOW_FRST_PAYOUT_YYYY)||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_FRST_PAYOUT_MM),2,'0')||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_FRST_PAYOUT_DD),2,'0')=99999999
         OR TO_CHAR(CONTRACTFULL.AIFCOW_FRST_PAYOUT_YYYY)||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_FRST_PAYOUT_MM),2,'0')||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_FRST_PAYOUT_DD),2,'0')>52000000
         THEN TO_DATE('9999-12-31','YYYY-MM-DD')
         ELSE
        PUBLIC.ISDATE((TO_CHAR(CONTRACTFULL.AIFCOW_FRST_PAYOUT_YYYY))||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_FRST_PAYOUT_MM),2,'0')||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_FRST_PAYOUT_DD),2,'0'))
     END AS FIRST_PAYOUT_DT  ,
     CASE WHEN
         TO_CHAR(CONTRACTFULL.AIFCOW_LAST_PAYOUT_YYYY)||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_LAST_PAYOUT_MM),2,'0')||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_LAST_PAYOUT_DD),2,'0')=99999999
         OR TO_CHAR(CONTRACTFULL.AIFCOW_LAST_PAYOUT_YYYY)||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_LAST_PAYOUT_MM),2,'0')||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_LAST_PAYOUT_DD),2,'0')>52000000
         THEN TO_DATE('9999-12-31','YYYY-MM-DD')
         ELSE
        PUBLIC.ISDATE((TO_CHAR(CONTRACTFULL.AIFCOW_LAST_PAYOUT_YYYY))||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_LAST_PAYOUT_MM),2,'0')||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_LAST_PAYOUT_DD),2,'0'))
     END AS LAST_PAYOUT_DT,
     CASE WHEN
         TO_CHAR(CONTRACTFULL.AIFCOW_NEXT_PAYOUT_YYYY)||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_NEXT_PAYOUT_MM),2,'0')||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_NEXT_PAYOUT_DD),2,'0')=99999999
         OR TO_CHAR(CONTRACTFULL.AIFCOW_NEXT_PAYOUT_YYYY)||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_NEXT_PAYOUT_MM),2,'0')||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_NEXT_PAYOUT_DD),2,'0')>52000000
         THEN TO_DATE('9999-12-31','YYYY-MM-DD')
         ELSE
        PUBLIC.ISDATE((TO_CHAR(CONTRACTFULL.AIFCOW_NEXT_PAYOUT_YYYY))||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_NEXT_PAYOUT_MM),2,'0')||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_NEXT_PAYOUT_DD),2,'0'))
     END AS NEXT_PAYOUT_DT,
    CLEAN_STRING(CONTRACTFULL.AIFCOW_BEN_DESC_ANNTY_OPT_CODE) AS PAYOUT_OPTION_CDE,
    CLEAN_STRING(CONTRACTFULL.AIFCOW_PYMT_ACCELER_ELIG_IND) AS PAYMENT_ACCELERATION_ELIGIBILITY_CDE,
    CONTRACTFULL.AIFCOW_TOT_NUM_ACCELER_PYMTS AS PAYMENT_ACCELERATION_CNT,
    CASE WHEN
         TO_CHAR(CONTRACTFULL.AIFCOW_LAST_GTEED_PAYOUT_YYYY)||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_LAST_GTEED_PAYOUT_MM),2,'0')||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_LAST_GTEED_PAYOUT_DD),2,'0')=99999999
         OR TO_CHAR(CONTRACTFULL.AIFCOW_LAST_GTEED_PAYOUT_YYYY)||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_LAST_GTEED_PAYOUT_MM),2,'0')||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_LAST_GTEED_PAYOUT_DD),2,'0')>52000000
         THEN TO_DATE('9999-12-31','YYYY-MM-DD')
         ELSE
        PUBLIC.ISDATE((TO_CHAR(CONTRACTFULL.AIFCOW_LAST_GTEED_PAYOUT_YYYY))||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_LAST_GTEED_PAYOUT_MM),2,'0')||LPAD(TO_CHAR(CONTRACTFULL.AIFCOW_LAST_GTEED_PAYOUT_DD),2,'0'))
    END AS LAST_GUARANTEED_PAYOUT_DT,
    NULL AS CURRENT_PAYOUT_AMT,
    NULL AS REMAINING_INSTALLMENT_AMT,
    CONTRACTFULL.AIFCOW_CURR_PAYOUT_AMT_FIX AS FIXED_PURCHASE_PAYOUT_AMT,
    CONTRACTFULL.AIFCOW_CURR_PAYOUT_AMT_VAR AS VARIABLE_PURCHASE_PAYOUT_AMT,
    (COALESCE(CONTRACTFULL.AIFCOW_CURR_PAYOUT_AMT_FIX,0) + COALESCE(CONTRACTFULL.AIFCOW_CURR_PAYOUT_AMT_VAR,0)) AS TOTAL_PURCHASE_PAYMENT_AMT,
    NULL AS TOTAL_INITIAL_PURCHASE_PAYMENT_AMT,
    COALESCE(PAYOUTFULL.AIFRPA_TOT_GROSS_PAYOUT_AMT ,0) AS AIFRPA_TOT_GROSS_PAYOUT_AMT,
    COALESCE(PAYOUTFULL.AIFRPA_YTD_GROSS_PAYOUT_AMT,0) AS AIFRPA_YTD_GROSS_PAYOUT_AMT,
    COALESCE(PAYOUTFULL.AIFRPA_TOT_NET_PAYOUT_AMT,0) AS AIFRPA_TOT_NET_PAYOUT_AMT,
    COALESCE(PAYOUTFULL.AIFRPA_YTD_NET_PAYOUT_AMT,0) AS AIFRPA_YTD_NET_PAYOUT_AMT,
    NULL AS PRIMARY_AND_JOINT_PAYOUT_AMT,
    NULL AS PRIMARY_ONLY_PAYOUT_AMT,
    NULL AS JOINT_ONLY_PAYOUT_AMT,
    TO_DATE(TO_CHAR(CONTRACTCNT.CYCLE_DATE),'YYYYMMDD') ::DATE AS BEGIN_DT,
    TO_DATE(TO_CHAR(CONTRACTCNT.CYCLE_DATE),'YYYYMMDD') :: TIMESTAMP AS BEGIN_DTM,
    CURRENT_TIMESTAMP(6):: TIMESTAMP AS ROW_PROCESS_DTM,
    NULL AS CHECK_SUM,
    '9999-12-31'::DATE AS END_DT,
    '9999-12-31'::TIMESTAMP AS END_DTM,
    FALSE AS RESTRICTED_ROW_IND,
    TRUE AS CURRENT_ROW_IND,
    FALSE AS LOGICAL_DELETE_IND,
    72 AS SOURCE_SYSTEM_ID,
    :audit_id AS AUDIT_ID,
    :audit_id AS UPDATE_AUDIT_ID,
    CASE
         WHEN CONTRACTFULL.PROCESSED_IND ='D' THEN TRUE
         ELSE FALSE
    END AS SOURCE_DELETE_IND,
     CONTRACTFULL.PROCESSED_IND  AS PROCESS_IND
FROM
(SELECT * FROM EDW_STAGING.AIF_RPS_EDW_CTRT_FULL_DEDUP
 UNION
SELECT * FROM EDW_STAGING.AIF_RPS_EDW_CTRT_DELTA_DEDUP
WHERE PROCESSED_IND='D' ) CONTRACTFULL
INNER JOIN EDW_STAGING.AIF_RPS_EDW_CTRT_DELTA_COUNT CONTRACTCNT
ON CONTRACTFULL.AUDIT_ID=CONTRACTCNT.AUDIT_ID
AND CONTRACTCNT.SOURCE_SYSTEM_ID =72
LEFT JOIN  EDW_STAGING.AIF_RPS_EDW_PAYEE_FULL PAYOUTFULL
ON BTRIM(PAYOUTFULL.AIFRPA_CONTRACT_IDENT)=BTRIM(CONTRACTFULL.AIFCOW_POLICY_ID)
--AGREEMENT_SOURCE_CDE
    LEFT JOIN (SELECT DISTINCT TRNSLT_FLD_VAL, SRC_CDE, SRC_FLD_NM, SRC_FLD_VAL, TRNSLT_FLD_NM FROM EDW_REF.SRC_DATA_TRNSLT
    WHERE UPPER(BTRIM(SRC_CDE)) ='ANN'
    AND UPPER(BTRIM(SRC_FLD_NM)) ='ADMN_SYS_CDE'
    AND UPPER(BTRIM(TRNSLT_FLD_NM)) = 'ADMIN OR SOURCE SYSTEM CODE') AGRMT_SDT
    ON UPPER(BTRIM(AGRMT_SDT.SRC_FLD_VAL)) = UPPER(UDF_REPLACEEMPTYSTR(CONTRACTFULL.AIFCOW_SOURCE_SYSTEM_ID, 'SPACE'))
--PAYOUT_MODE_CDE
    LEFT JOIN
    (SELECT DISTINCT TRNSLT_FLD_VAL, SRC_CDE, SRC_FLD_NM, SRC_FLD_VAL, SRC_TBL_NM , TRNSLT_FLD_NM
    FROM EDW_REF.SRC_DATA_TRNSLT
    WHERE UPPER(BTRIM(SRC_CDE))= 'ANN'
    AND UPPER(BTRIM(SRC_FLD_NM))= 'PAYOUT_FREQ_CODE'
    AND UPPER(BTRIM(TRNSLT_FLD_NM))='PAYOUT FREQUENCY') SDT_PAYOUT_MODE_CDE
    ON  UPPER(BTRIM(SDT_PAYOUT_MODE_CDE.SRC_FLD_VAL)) = UPPER(UDF_REPLACEEMPTYSTR(CONTRACTFULL.AIFCOW_PAYOUT_FREQ_CODE ,'SPACE'))
--PAYOUT_STATUS_CDE
    LEFT JOIN
    (SELECT DISTINCT TRNSLT_FLD_VAL, SRC_CDE, SRC_FLD_NM, SRC_FLD_VAL, SRC_TBL_NM , TRNSLT_FLD_NM
    FROM EDW_REF.SRC_DATA_TRNSLT
    WHERE UPPER(BTRIM(SRC_CDE))= 'ANN'
    AND UPPER(BTRIM(SRC_FLD_NM))= 'PAYOUT_STAT_CODE'
    AND UPPER(BTRIM(TRNSLT_FLD_NM))='PAYOUT STATUS') SDT_PAYOUT_STATUS_CDE
    ON  UPPER(BTRIM(SDT_PAYOUT_STATUS_CDE.SRC_FLD_VAL)) = UPPER(UDF_REPLACEEMPTYSTR(CONTRACTFULL.AIFCOW_PAYOUT_STAT_CODE, 'SPACE'))
) AAP
LEFT JOIN {{target_schema}}.DIM_ANNUITY_PAYOUT_OPTION DAPO
ON AAP.DIM_ANNUITY_PAYOUT_OPTION_NATURAL_KEY_HASH_UUID=DAPO.DIM_ANNUITY_PAYOUT_OPTION_NATURAL_KEY_HASH_UUID
AND DAPO.CURRENT_ROW_IND=TRUE
;

select analyze_statistics('EDW_STAGING.AIFRPS_ATTR_AGREEMENT_PAYOUT_PRE_WORK');

---------------------------------------------------------------------------------------
/* EDW_WORK.AIFRPS_ATTR_AGREEMENT_PAYOUT - INSERTS
 * 
 * THIS SCRIPT IS USED TO LOAD THE RECORDS THAT DON'T HAVE A RECORD IN TARGET
 * */
----------------------------------------------------------------------------------------

INSERT INTO EDW_WORK.AIFRPS_ATTR_AGREEMENT_PAYOUT
( 
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    DIM_ANNUITY_PAYOUT_OPTION_NATURAL_KEY_HASH_UUID,
    AGREEMENT_SOURCE_CDE,
    AGREEMENT_TYPE_CDE,
    AGREEMENT_NR_PFX,
    AGREEMENT_NR,
    AGREEMENT_NR_SFX,
    PAYOUT_METHOD_CDE,
    SOURCE_PAYOUT_METHOD_CDE,
    PAYOUT_MODE_CDE,
    SOURCE_PAYOUT_MODE_CDE,
    PAYOUT_STATUS_CDE,
    SOURCE_PAYOUT_STATUS_CDE,
    FIRST_PAYOUT_DT,
    LAST_PAYOUT_DT,
    NEXT_PAYOUT_DT,
    PAYOUT_OPTION_CDE,
    PAYMENT_ACCELERATION_ELIGIBILITY_CDE,
    PAYMENT_ACCELERATION_CNT,
    PERIOD_CERTAIN_PAYOUT_MODE_DURATION_NR,
    LAST_GUARANTEED_PAYOUT_DT,
    CURRENT_PAYOUT_AMT,
    REMAINING_INSTALLMENT_AMT,
    FIXED_PURCHASE_PAYOUT_AMT,
    VARIABLE_PURCHASE_PAYOUT_AMT,
    TOTAL_PURCHASE_PAYMENT_AMT,
    TOTAL_INITIAL_PURCHASE_PAYMENT_AMT,
    TOTAL_GROSS_PAYOUT_AMT,
    YTD_GROSS_PAYOUT_AMT,
    TOTAL_NET_PAYOUT_AMT,
    YTD_NET_PAYOUT_AMT,
    PRIMARY_AND_JOINT_PAYOUT_AMT,
    PRIMARY_ONLY_PAYOUT_AMT,
    JOINT_ONLY_PAYOUT_AMT,
    BEGIN_DT,
    BEGIN_DTM,
    ROW_PROCESS_DTM,
    CHECK_SUM,
    END_DT,
    END_DTM,
    RESTRICTED_ROW_IND,
    CURRENT_ROW_IND,
    LOGICAL_DELETE_IND,
    SOURCE_SYSTEM_ID,
    AUDIT_ID,
    UPDATE_AUDIT_ID,
    SOURCE_DELETE_IND
)
SELECT
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    DIM_ANNUITY_PAYOUT_OPTION_NATURAL_KEY_HASH_UUID,
    AGREEMENT_SOURCE_CDE,
    AGREEMENT_TYPE_CDE,
    AGREEMENT_NR_PFX,
    AGREEMENT_NR,
    AGREEMENT_NR_SFX,
    PAYOUT_METHOD_CDE,
    SOURCE_PAYOUT_METHOD_CDE,
    PAYOUT_MODE_CDE,
    SOURCE_PAYOUT_MODE_CDE,
    PAYOUT_STATUS_CDE,
    SOURCE_PAYOUT_STATUS_CDE,
    FIRST_PAYOUT_DT,
    LAST_PAYOUT_DT,
    NEXT_PAYOUT_DT,
    PAYOUT_OPTION_CDE,
    PAYMENT_ACCELERATION_ELIGIBILITY_CDE,
    PAYMENT_ACCELERATION_CNT,
    PERIOD_CERTAIN_PAYOUT_MODE_DURATION_NR,
    LAST_GUARANTEED_PAYOUT_DT,
    CURRENT_PAYOUT_AMT,
    REMAINING_INSTALLMENT_AMT,
    FIXED_PURCHASE_PAYOUT_AMT,
    VARIABLE_PURCHASE_PAYOUT_AMT,
    TOTAL_PURCHASE_PAYMENT_AMT,
    TOTAL_INITIAL_PURCHASE_PAYMENT_AMT,
    TOTAL_GROSS_PAYOUT_AMT,
    YTD_GROSS_PAYOUT_AMT,
    TOTAL_NET_PAYOUT_AMT,
    YTD_NET_PAYOUT_AMT,
    PRIMARY_AND_JOINT_PAYOUT_AMT,
    PRIMARY_ONLY_PAYOUT_AMT,
    JOINT_ONLY_PAYOUT_AMT,
    BEGIN_DT,
    BEGIN_DTM,
    ROW_PROCESS_DTM,
    CHECK_SUM,
    END_DT,
    END_DTM,
    RESTRICTED_ROW_IND,
    CURRENT_ROW_IND,
    LOGICAL_DELETE_IND,
    SOURCE_SYSTEM_ID,
    AUDIT_ID,
    UPDATE_AUDIT_ID,
    SOURCE_DELETE_IND
FROM EDW_STAGING.AIFRPS_ATTR_AGREEMENT_PAYOUT_PRE_WORK PW
WHERE PW.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID NOT IN (SELECT DISTINCT DIM_AGREEMENT_NATURAL_KEY_HASH_UUID FROM {{target_schema}}.ATTR_AGREEMENT_PAYOUT WHERE  SOURCE_SYSTEM_ID IN ('72','266') ) ;


---------------------------------------------------------------------------------------------------------------
/* EDW_WORK.AIFRPS_ATTR_AGREEMENT_PAYOUT TABLE - UPDATE TGT RECORD
 * 
 * THIS SCRIPT FINDS RECORDS WHERE THE NEW RECORD FROM THE SOURCE HAS A DIFFERENT CHECK_SUM THAN THE CURRENT TARGET RECORD. 
 * THE CURRENT RECORD IN THE TARGET WILL BE ENDED SINCE THE SOURCE RECORD WILL BE INSERTED IN THE NEXT STEP.
 * */
---------------------------------------------------------------------------------------------------------------

INSERT INTO EDW_WORK.AIFRPS_ATTR_AGREEMENT_PAYOUT
( 
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    DIM_ANNUITY_PAYOUT_OPTION_NATURAL_KEY_HASH_UUID,
    AGREEMENT_SOURCE_CDE,
    AGREEMENT_TYPE_CDE,
    AGREEMENT_NR_PFX,
    AGREEMENT_NR,
    AGREEMENT_NR_SFX,
    PAYOUT_METHOD_CDE,
    SOURCE_PAYOUT_METHOD_CDE,
    PAYOUT_MODE_CDE,
    SOURCE_PAYOUT_MODE_CDE,
    PAYOUT_STATUS_CDE,
    SOURCE_PAYOUT_STATUS_CDE,
    FIRST_PAYOUT_DT,
    LAST_PAYOUT_DT,
    NEXT_PAYOUT_DT,
    PAYOUT_OPTION_CDE,
    PAYMENT_ACCELERATION_ELIGIBILITY_CDE,
    PAYMENT_ACCELERATION_CNT,
    PERIOD_CERTAIN_PAYOUT_MODE_DURATION_NR,
    LAST_GUARANTEED_PAYOUT_DT,
    CURRENT_PAYOUT_AMT,
    REMAINING_INSTALLMENT_AMT,
    FIXED_PURCHASE_PAYOUT_AMT,
    VARIABLE_PURCHASE_PAYOUT_AMT,
    TOTAL_PURCHASE_PAYMENT_AMT,
    TOTAL_INITIAL_PURCHASE_PAYMENT_AMT,
    TOTAL_GROSS_PAYOUT_AMT,
    YTD_GROSS_PAYOUT_AMT,
    TOTAL_NET_PAYOUT_AMT,
    YTD_NET_PAYOUT_AMT,
    PRIMARY_AND_JOINT_PAYOUT_AMT,
    PRIMARY_ONLY_PAYOUT_AMT,
    JOINT_ONLY_PAYOUT_AMT,
    BEGIN_DT,
    BEGIN_DTM,
    ROW_PROCESS_DTM,
    CHECK_SUM,
    END_DT,
    END_DTM,
    RESTRICTED_ROW_IND,
    CURRENT_ROW_IND,
    LOGICAL_DELETE_IND,
    SOURCE_SYSTEM_ID,
    AUDIT_ID,
    UPDATE_AUDIT_ID,
    SOURCE_DELETE_IND
)
SELECT 
    AAP.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    AAP.DIM_ANNUITY_PAYOUT_OPTION_NATURAL_KEY_HASH_UUID,
    AAP.AGREEMENT_SOURCE_CDE,
    AAP.AGREEMENT_TYPE_CDE,
    AAP.AGREEMENT_NR_PFX,
    AAP.AGREEMENT_NR,
    AAP.AGREEMENT_NR_SFX,
    AAP.PAYOUT_METHOD_CDE,
    AAP.SOURCE_PAYOUT_METHOD_CDE,
    AAP.PAYOUT_MODE_CDE,
    AAP.SOURCE_PAYOUT_MODE_CDE,
    AAP.PAYOUT_STATUS_CDE,
    AAP.SOURCE_PAYOUT_STATUS_CDE,
    AAP.FIRST_PAYOUT_DT,
    AAP.LAST_PAYOUT_DT,
    AAP.NEXT_PAYOUT_DT,
    AAP.PAYOUT_OPTION_CDE,
    AAP.PAYMENT_ACCELERATION_ELIGIBILITY_CDE,
    AAP.PAYMENT_ACCELERATION_CNT,
    AAP.PERIOD_CERTAIN_PAYOUT_MODE_DURATION_NR,
    AAP.LAST_GUARANTEED_PAYOUT_DT,
    AAP.CURRENT_PAYOUT_AMT,
    AAP.REMAINING_INSTALLMENT_AMT,
    AAP.FIXED_PURCHASE_PAYOUT_AMT,
    AAP.VARIABLE_PURCHASE_PAYOUT_AMT,
    AAP.TOTAL_PURCHASE_PAYMENT_AMT,
    AAP.TOTAL_INITIAL_PURCHASE_PAYMENT_AMT,
    AAP.TOTAL_GROSS_PAYOUT_AMT,
    AAP.YTD_GROSS_PAYOUT_AMT,
    AAP.TOTAL_NET_PAYOUT_AMT,
    AAP.YTD_NET_PAYOUT_AMT,
    AAP.PRIMARY_AND_JOINT_PAYOUT_AMT,
    AAP.PRIMARY_ONLY_PAYOUT_AMT,
    AAP.JOINT_ONLY_PAYOUT_AMT,
    AAP.BEGIN_DT,
    AAP.BEGIN_DTM,
    CURRENT_TIMESTAMP(6)::TIMESTAMP AS ROW_PROCESS_DTM,
    AAP.CHECK_SUM,
    PW.BEGIN_DT - INTERVAL '1' DAY  END_DT,
    PW.BEGIN_DTM - INTERVAL '1' SECOND AS END_DTM ,
    AAP.RESTRICTED_ROW_IND,
    FALSE AS CURRENT_ROW_IND,
    AAP.LOGICAL_DELETE_IND,
    AAP.SOURCE_SYSTEM_ID,
    AAP.AUDIT_ID,
    PW.UPDATE_AUDIT_ID,
    AAP.SOURCE_DELETE_IND
    FROM {{target_schema}}.ATTR_AGREEMENT_PAYOUT AAP
    INNER JOIN EDW_STAGING.AIFRPS_ATTR_AGREEMENT_PAYOUT_PRE_WORK PW
        ON AAP.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID=PW.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID
        AND AAP.CURRENT_ROW_IND = TRUE
    WHERE PW.CHECK_SUM <> AAP.CHECK_SUM ;


------------------------------------------------------------------------------------------------------
/* EDW_WORK.AIFRPS_ATTR_AGREEMENT_PAYOUT WORK TABLE WORK TABLE - UPDATE WHERE RECORD ALREADY EXISTS IN TARGET
 * 
 * 
 * */
-----------------------------------------------------------------------------------------------------

INSERT INTO EDW_WORK.AIFRPS_ATTR_AGREEMENT_PAYOUT
( 
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    DIM_ANNUITY_PAYOUT_OPTION_NATURAL_KEY_HASH_UUID,
    AGREEMENT_SOURCE_CDE,
    AGREEMENT_TYPE_CDE,
    AGREEMENT_NR_PFX,
    AGREEMENT_NR,
    AGREEMENT_NR_SFX,
    PAYOUT_METHOD_CDE,
    SOURCE_PAYOUT_METHOD_CDE,
    PAYOUT_MODE_CDE,
    SOURCE_PAYOUT_MODE_CDE,
    PAYOUT_STATUS_CDE,
    SOURCE_PAYOUT_STATUS_CDE,
    FIRST_PAYOUT_DT,
    LAST_PAYOUT_DT,
    NEXT_PAYOUT_DT,
    PAYOUT_OPTION_CDE,
    PAYMENT_ACCELERATION_ELIGIBILITY_CDE,
    PAYMENT_ACCELERATION_CNT,
    PERIOD_CERTAIN_PAYOUT_MODE_DURATION_NR,
    LAST_GUARANTEED_PAYOUT_DT,
    CURRENT_PAYOUT_AMT,
    REMAINING_INSTALLMENT_AMT,
    FIXED_PURCHASE_PAYOUT_AMT,
    VARIABLE_PURCHASE_PAYOUT_AMT,
    TOTAL_PURCHASE_PAYMENT_AMT,
    TOTAL_INITIAL_PURCHASE_PAYMENT_AMT,
    TOTAL_GROSS_PAYOUT_AMT,
    YTD_GROSS_PAYOUT_AMT,
    TOTAL_NET_PAYOUT_AMT,
    YTD_NET_PAYOUT_AMT,
    PRIMARY_AND_JOINT_PAYOUT_AMT,
    PRIMARY_ONLY_PAYOUT_AMT,
    JOINT_ONLY_PAYOUT_AMT,
    BEGIN_DT,
    BEGIN_DTM,
    ROW_PROCESS_DTM,
    CHECK_SUM,
    END_DT,
    END_DTM,
    RESTRICTED_ROW_IND,
    CURRENT_ROW_IND,
    LOGICAL_DELETE_IND,
    SOURCE_SYSTEM_ID,
    AUDIT_ID,
    UPDATE_AUDIT_ID,
    SOURCE_DELETE_IND
)
SELECT 
    PW.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    PW.DIM_ANNUITY_PAYOUT_OPTION_NATURAL_KEY_HASH_UUID,
    PW.AGREEMENT_SOURCE_CDE,
    PW.AGREEMENT_TYPE_CDE,
    PW.AGREEMENT_NR_PFX,
    PW.AGREEMENT_NR,
    PW.AGREEMENT_NR_SFX,
    PW.PAYOUT_METHOD_CDE,
    PW.SOURCE_PAYOUT_METHOD_CDE,
    PW.PAYOUT_MODE_CDE,
    PW.SOURCE_PAYOUT_MODE_CDE,
    PW.PAYOUT_STATUS_CDE,
    PW.SOURCE_PAYOUT_STATUS_CDE,
    PW.FIRST_PAYOUT_DT,
    PW.LAST_PAYOUT_DT,
    PW.NEXT_PAYOUT_DT,
    PW.PAYOUT_OPTION_CDE,
    PW.PAYMENT_ACCELERATION_ELIGIBILITY_CDE,
    PW.PAYMENT_ACCELERATION_CNT,
    PW.PERIOD_CERTAIN_PAYOUT_MODE_DURATION_NR,
    PW.LAST_GUARANTEED_PAYOUT_DT,
    PW.CURRENT_PAYOUT_AMT,
    PW.REMAINING_INSTALLMENT_AMT,
    PW.FIXED_PURCHASE_PAYOUT_AMT,
    PW.VARIABLE_PURCHASE_PAYOUT_AMT,
    PW.TOTAL_PURCHASE_PAYMENT_AMT,
    PW.TOTAL_INITIAL_PURCHASE_PAYMENT_AMT,
    PW.TOTAL_GROSS_PAYOUT_AMT,
    PW.YTD_GROSS_PAYOUT_AMT,
    PW.TOTAL_NET_PAYOUT_AMT,
    PW.YTD_NET_PAYOUT_AMT,
    PW.PRIMARY_AND_JOINT_PAYOUT_AMT,
    PW.PRIMARY_ONLY_PAYOUT_AMT,
    PW.JOINT_ONLY_PAYOUT_AMT,
    PW.BEGIN_DT,
    PW.BEGIN_DTM,
    CURRENT_TIMESTAMP(6)::TIMESTAMP AS ROW_PROCESS_DTM,
    PW.CHECK_SUM,
    PW.END_DT,
    PW.END_DTM,
    PW.RESTRICTED_ROW_IND,
    PW.CURRENT_ROW_IND,
    PW.LOGICAL_DELETE_IND,
    PW.SOURCE_SYSTEM_ID,
    PW.AUDIT_ID,
    PW.UPDATE_AUDIT_ID,
    PW.SOURCE_DELETE_IND
FROM EDW_STAGING.AIFRPS_ATTR_AGREEMENT_PAYOUT_PRE_WORK PW
LEFT JOIN {{target_schema}}.ATTR_AGREEMENT_PAYOUT AAP
    ON PW.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID = AAP.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID
    AND AAP.CURRENT_ROW_IND = 'TRUE'
WHERE
--HANDLE WHEN THERE ISN'T A CURRENT RECORD IN TARGET BUT THERE ARE HISTORICAL RECORDS AND A DELTA COMING THROUGH
    (AAP.ROW_SID IS NULL
        AND PW.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID IN (SELECT DISTINCT DIM_AGREEMENT_NATURAL_KEY_HASH_UUID FROM {{target_schema}}.ATTR_AGREEMENT_PAYOUT)
    )
--HANDLE WHEN THERE IS A CURRENT TARGET RECORD AND EITHER THE CHECK_SUM HAS CHANGED OR RECORD IS BEING LOGICALLY DELETED.
    OR ( AAP.ROW_SID IS NOT NULL
--CHECKSUM CHANGED
         AND ( AAP.CHECK_SUM <> PW.CHECK_SUM )
       ) ;

select analyze_statistics('EDW_WORK.AIFRPS_ATTR_AGREEMENT_PAYOUT');

